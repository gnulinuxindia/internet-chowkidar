openapi: 3.0.0
info:
  title: Site Blocking API
  version: 1.0.0
  description: API for managing site blocking, ISPs, abuse reports, and site suggestions

servers:
  - url: https://inetc.kat.directory
    description: Production server (uses live data)
  - url: http://localhost:9000
    description: Use this if you are checking with a local instance

paths:
  /:
    get:
      summary: API Docs
      operationId: apiDocs
      responses:
        '200':
          description: success
          content:
            text/html:
              schema:
                type: string
  /sites:
    get:
      summary: List all sites
      operationId: listSites
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter sites by category, separated by commas
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Number of sites to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of sites to skip
        - in: query
          name: sort
          schema:
            type: string
            default: 'id'
          description: Sort sites by field
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          description: Sort order
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
    post:
      security:
        - ApiKeyAuth: []
      operationId: createSite
      summary: Create a new site
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteCreate'
  /sites/{id}:
    get:
      summary: Get a site by ID
      operationId: getSite
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteDetails'
  
  /isps/{id}:
    get:
      summary: Get an ISP by ID
      operationId: getISP
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISPDetails'
    
  /isps:
    get:
      summary: List all ISPs
      operationId: listISPs
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Number of ISPs to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of ISPs to skip
        - in: query
          name: sort
          schema:
            type: string
            default: 'id'
          description: Sort ISPs by field
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          description: Sort order
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ISP'
    post:
      summary: Create a new ISP
      operationId: createISP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ISPInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISP'

  /blocks:
    get:
      summary: List all blocks
      operationId: listBlocks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Block'
    post:
      summary: Create a new block
      operationId: createBlock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'

  /abuse-reports:
    get:
      summary: List all abuse reports
      operationId: listAbuseReports
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbuseReport'
    post:
      summary: Create a new abuse report
      operationId: createAbuseReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbuseReportInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbuseReport'

  /sites/suggestions:
    get:
      summary: List all site suggestions
      operationId: listSiteSuggestions
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter sites by category, separated by commas
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Number of sites to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of sites to skip
        - in: query
          name: sort
          schema:
            type: string
            default: 'id'
          description: Sort sites by field
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          description: Sort order
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteSuggestion'
    post:
      summary: Create a new site suggestion
      operationId: createSiteSuggestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteSuggestionInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSuggestion'
  /sites/suggestions/{id}:
    get:
      summary: Get a site suggestion by ID
      operationId: getSiteSuggestion
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSuggestion'

  /categories:
    get:
      summary: List all categories
      operationId: listCategories
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Create a new category
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      security:
        - ApiKeyAuth: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  
  /health:
    get:
      summary: Health check
      operationId: healthCheck
      responses:
        '200':
          description: Healthy
          content:
            application/json:
              schema:
                type: string
                example: 'ok'

components:
  securitySchemes:
      ApiKeyAuth:
        type: apiKey
        in: header
        name: X-Api-Key
  schemas:
    Site:
      type: object
      required:
        - id
        - domain
        - ping_url
        - categories
        - block_reports
        - unblock_reports
        - last_reported_at
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        domain:
          type: string
        ping_url:
          type: string
        categories:
          type: array
          items:
            type: string
        block_reports:
          type: integer
        unblock_reports:
          type: integer
        last_reported_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SiteDetails:
      type: object
      required:
        - id
        - domain
        - ping_url
        - categories
        - block_reports
        - unblock_reports
        - last_reported_at
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        domain:
          type: string
        ping_url:
          type: string
        categories:
          type: array
          items:
            type: string
        block_reports:
          type: integer
        unblock_reports:
          type: integer
        last_reported_at:
          type: string
          format: date-time
        blocked_by_isps:
          type: array
          items:
            $ref: '#/components/schemas/ISP'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SiteInput:
      type: object
      required:
        - domain
        - categories
      properties:
        domain:
          type: string
        ping_url:
          type: string
        categories:
          type: array
          items:
            type: string
    
    SiteCreate:
      type: object
      required:
        - id
        - domain
        - ping_url
        - category_id
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        domain:
          type: string
        ping_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ISP:
      type: object
      properties:
        id:
          type: integer
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        name:
          type: string
        block_reports:
          type: integer
        unblock_reports:
          type: integer
        last_reported_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    ISPDetails:
      type: object
      required:
        - id
        - latitude
        - longitude
        - name
        - blocks
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        name:
          type: string
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ISPBlock'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ISPInput:
      type: object
      required:
        - latitude
        - longitude
        - name
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        name:
          type: string

    Block:
      type: object
      properties:
        id:
          type: integer
        site_id:
          type: integer
        client_id:
          type: integer
        isp_id:
          type: integer
        last_reported_at:
          type: string
          format: date-time
        block_reports:
          type: integer
        unblock_reports:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    ISPBlock:
      type: object
      required:
        - id
        - site_id
        - domain
        - last_reported_at
        - block_reports
        - unblock_reports
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        domain:
          type: string
        site_id:
          type: integer
        last_reported_at:
          type: string
          format: date-time
        block_reports:
          type: integer
        unblock_reports:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    BlockInput:
      type: object
      required:
        - site_id
        - client_id 
        - isp_id
        - is_blocked
      properties:
        site_id:
          type: integer
        client_id:
          type: integer
        isp_id:
          type: integer
        is_blocked:
          type: boolean

    AbuseReport:
      type: object
      properties:
        id:
          type: integer
        site_id:
          type: integer
        reason:
          type: string
        status:
          type: string
          enum: [pending, resolved]
        resolved_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    AbuseReportInput:
      type: object
      required:
        - site_id
        - reason
      properties:
        site_id:
          type: integer
        reason:
          type: string

    SiteSuggestion:
      type: object
      required:
        - id
        - domain
        - ping_url
        - categories
        - reason
        - status
        - resolve_reason
        - resolved_at
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        domain:
          type: string
        ping_url:
          type: string
        categories:
          type: array
          items:
            type: string
        reason:
          type: string
        status:
          type: string
          enum: [pending, accepted, rejected]
        resolve_reason:
          type: string
        resolved_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SiteSuggestionInput:
      type: object
      required:
        - domain 
        - reason
      properties:
        domain:
          type: string
        ping_url:
          type: string
        categories:
          type: array
          items:
            type: string
        reason:
          type: string
    
    Category:
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
