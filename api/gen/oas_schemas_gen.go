// Code generated by ogen, DO NOT EDIT.

package genapi

import (
	"io"
	"time"

	"github.com/go-faster/errors"
)

// Ref: #/components/schemas/AbuseReport
type AbuseReport struct {
	ID         OptInt               `json:"id"`
	SiteID     OptInt               `json:"site_id"`
	Reason     OptString            `json:"reason"`
	Status     OptAbuseReportStatus `json:"status"`
	ResolvedAt OptDateTime          `json:"resolved_at"`
	CreatedAt  OptDateTime          `json:"created_at"`
	UpdatedAt  OptDateTime          `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *AbuseReport) GetID() OptInt {
	return s.ID
}

// GetSiteID returns the value of SiteID.
func (s *AbuseReport) GetSiteID() OptInt {
	return s.SiteID
}

// GetReason returns the value of Reason.
func (s *AbuseReport) GetReason() OptString {
	return s.Reason
}

// GetStatus returns the value of Status.
func (s *AbuseReport) GetStatus() OptAbuseReportStatus {
	return s.Status
}

// GetResolvedAt returns the value of ResolvedAt.
func (s *AbuseReport) GetResolvedAt() OptDateTime {
	return s.ResolvedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AbuseReport) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *AbuseReport) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *AbuseReport) SetID(val OptInt) {
	s.ID = val
}

// SetSiteID sets the value of SiteID.
func (s *AbuseReport) SetSiteID(val OptInt) {
	s.SiteID = val
}

// SetReason sets the value of Reason.
func (s *AbuseReport) SetReason(val OptString) {
	s.Reason = val
}

// SetStatus sets the value of Status.
func (s *AbuseReport) SetStatus(val OptAbuseReportStatus) {
	s.Status = val
}

// SetResolvedAt sets the value of ResolvedAt.
func (s *AbuseReport) SetResolvedAt(val OptDateTime) {
	s.ResolvedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AbuseReport) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *AbuseReport) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/AbuseReportInput
type AbuseReportInput struct {
	SiteID int    `json:"site_id"`
	Reason string `json:"reason"`
}

// GetSiteID returns the value of SiteID.
func (s *AbuseReportInput) GetSiteID() int {
	return s.SiteID
}

// GetReason returns the value of Reason.
func (s *AbuseReportInput) GetReason() string {
	return s.Reason
}

// SetSiteID sets the value of SiteID.
func (s *AbuseReportInput) SetSiteID(val int) {
	s.SiteID = val
}

// SetReason sets the value of Reason.
func (s *AbuseReportInput) SetReason(val string) {
	s.Reason = val
}

type AbuseReportStatus string

const (
	AbuseReportStatusPending  AbuseReportStatus = "pending"
	AbuseReportStatusResolved AbuseReportStatus = "resolved"
)

// AllValues returns all AbuseReportStatus values.
func (AbuseReportStatus) AllValues() []AbuseReportStatus {
	return []AbuseReportStatus{
		AbuseReportStatusPending,
		AbuseReportStatusResolved,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AbuseReportStatus) MarshalText() ([]byte, error) {
	switch s {
	case AbuseReportStatusPending:
		return []byte(s), nil
	case AbuseReportStatusResolved:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AbuseReportStatus) UnmarshalText(data []byte) error {
	switch AbuseReportStatus(data) {
	case AbuseReportStatusPending:
		*s = AbuseReportStatusPending
		return nil
	case AbuseReportStatusResolved:
		*s = AbuseReportStatusResolved
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ApiDocsOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s ApiDocsOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type ApiKeyAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *ApiKeyAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *ApiKeyAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/components/schemas/Block
type Block struct {
	ID             OptInt      `json:"id"`
	SiteID         OptInt      `json:"site_id"`
	IspID          OptInt      `json:"isp_id"`
	LastReportedAt OptDateTime `json:"last_reported_at"`
	BlockReports   OptInt      `json:"block_reports"`
	UnblockReports OptInt      `json:"unblock_reports"`
	CreatedAt      OptDateTime `json:"created_at"`
	UpdatedAt      OptDateTime `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Block) GetID() OptInt {
	return s.ID
}

// GetSiteID returns the value of SiteID.
func (s *Block) GetSiteID() OptInt {
	return s.SiteID
}

// GetIspID returns the value of IspID.
func (s *Block) GetIspID() OptInt {
	return s.IspID
}

// GetLastReportedAt returns the value of LastReportedAt.
func (s *Block) GetLastReportedAt() OptDateTime {
	return s.LastReportedAt
}

// GetBlockReports returns the value of BlockReports.
func (s *Block) GetBlockReports() OptInt {
	return s.BlockReports
}

// GetUnblockReports returns the value of UnblockReports.
func (s *Block) GetUnblockReports() OptInt {
	return s.UnblockReports
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Block) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Block) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Block) SetID(val OptInt) {
	s.ID = val
}

// SetSiteID sets the value of SiteID.
func (s *Block) SetSiteID(val OptInt) {
	s.SiteID = val
}

// SetIspID sets the value of IspID.
func (s *Block) SetIspID(val OptInt) {
	s.IspID = val
}

// SetLastReportedAt sets the value of LastReportedAt.
func (s *Block) SetLastReportedAt(val OptDateTime) {
	s.LastReportedAt = val
}

// SetBlockReports sets the value of BlockReports.
func (s *Block) SetBlockReports(val OptInt) {
	s.BlockReports = val
}

// SetUnblockReports sets the value of UnblockReports.
func (s *Block) SetUnblockReports(val OptInt) {
	s.UnblockReports = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Block) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Block) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/BlockInput
type BlockInput struct {
	SiteID    int  `json:"site_id"`
	IspID     int  `json:"isp_id"`
	IsBlocked bool `json:"is_blocked"`
}

// GetSiteID returns the value of SiteID.
func (s *BlockInput) GetSiteID() int {
	return s.SiteID
}

// GetIspID returns the value of IspID.
func (s *BlockInput) GetIspID() int {
	return s.IspID
}

// GetIsBlocked returns the value of IsBlocked.
func (s *BlockInput) GetIsBlocked() bool {
	return s.IsBlocked
}

// SetSiteID sets the value of SiteID.
func (s *BlockInput) SetSiteID(val int) {
	s.SiteID = val
}

// SetIspID sets the value of IspID.
func (s *BlockInput) SetIspID(val int) {
	s.IspID = val
}

// SetIsBlocked sets the value of IsBlocked.
func (s *BlockInput) SetIsBlocked(val bool) {
	s.IsBlocked = val
}

// Ref: #/components/schemas/Category
type Category struct {
	ID        int       `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Category) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Category) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Category) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Category) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Category) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Category) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Category) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Category) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type CreateCategoryReq struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *CreateCategoryReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *CreateCategoryReq) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/ISP
type ISP struct {
	ID             OptInt      `json:"id"`
	Latitude       OptFloat32  `json:"latitude"`
	Longitude      OptFloat32  `json:"longitude"`
	Name           OptString   `json:"name"`
	BlockReports   OptInt      `json:"block_reports"`
	UnblockReports OptInt      `json:"unblock_reports"`
	LastReportedAt OptDateTime `json:"last_reported_at"`
	CreatedAt      OptDateTime `json:"created_at"`
	UpdatedAt      OptDateTime `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ISP) GetID() OptInt {
	return s.ID
}

// GetLatitude returns the value of Latitude.
func (s *ISP) GetLatitude() OptFloat32 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *ISP) GetLongitude() OptFloat32 {
	return s.Longitude
}

// GetName returns the value of Name.
func (s *ISP) GetName() OptString {
	return s.Name
}

// GetBlockReports returns the value of BlockReports.
func (s *ISP) GetBlockReports() OptInt {
	return s.BlockReports
}

// GetUnblockReports returns the value of UnblockReports.
func (s *ISP) GetUnblockReports() OptInt {
	return s.UnblockReports
}

// GetLastReportedAt returns the value of LastReportedAt.
func (s *ISP) GetLastReportedAt() OptDateTime {
	return s.LastReportedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ISP) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ISP) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ISP) SetID(val OptInt) {
	s.ID = val
}

// SetLatitude sets the value of Latitude.
func (s *ISP) SetLatitude(val OptFloat32) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *ISP) SetLongitude(val OptFloat32) {
	s.Longitude = val
}

// SetName sets the value of Name.
func (s *ISP) SetName(val OptString) {
	s.Name = val
}

// SetBlockReports sets the value of BlockReports.
func (s *ISP) SetBlockReports(val OptInt) {
	s.BlockReports = val
}

// SetUnblockReports sets the value of UnblockReports.
func (s *ISP) SetUnblockReports(val OptInt) {
	s.UnblockReports = val
}

// SetLastReportedAt sets the value of LastReportedAt.
func (s *ISP) SetLastReportedAt(val OptDateTime) {
	s.LastReportedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ISP) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ISP) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/ISPBlock
type ISPBlock struct {
	ID             int       `json:"id"`
	Domain         string    `json:"domain"`
	SiteID         int       `json:"site_id"`
	LastReportedAt time.Time `json:"last_reported_at"`
	BlockReports   int       `json:"block_reports"`
	UnblockReports int       `json:"unblock_reports"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ISPBlock) GetID() int {
	return s.ID
}

// GetDomain returns the value of Domain.
func (s *ISPBlock) GetDomain() string {
	return s.Domain
}

// GetSiteID returns the value of SiteID.
func (s *ISPBlock) GetSiteID() int {
	return s.SiteID
}

// GetLastReportedAt returns the value of LastReportedAt.
func (s *ISPBlock) GetLastReportedAt() time.Time {
	return s.LastReportedAt
}

// GetBlockReports returns the value of BlockReports.
func (s *ISPBlock) GetBlockReports() int {
	return s.BlockReports
}

// GetUnblockReports returns the value of UnblockReports.
func (s *ISPBlock) GetUnblockReports() int {
	return s.UnblockReports
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ISPBlock) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ISPBlock) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ISPBlock) SetID(val int) {
	s.ID = val
}

// SetDomain sets the value of Domain.
func (s *ISPBlock) SetDomain(val string) {
	s.Domain = val
}

// SetSiteID sets the value of SiteID.
func (s *ISPBlock) SetSiteID(val int) {
	s.SiteID = val
}

// SetLastReportedAt sets the value of LastReportedAt.
func (s *ISPBlock) SetLastReportedAt(val time.Time) {
	s.LastReportedAt = val
}

// SetBlockReports sets the value of BlockReports.
func (s *ISPBlock) SetBlockReports(val int) {
	s.BlockReports = val
}

// SetUnblockReports sets the value of UnblockReports.
func (s *ISPBlock) SetUnblockReports(val int) {
	s.UnblockReports = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ISPBlock) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ISPBlock) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/ISPDetails
type ISPDetails struct {
	ID        int        `json:"id"`
	Latitude  float32    `json:"latitude"`
	Longitude float32    `json:"longitude"`
	Name      string     `json:"name"`
	Blocks    []ISPBlock `json:"blocks"`
	CreatedAt time.Time  `json:"created_at"`
	UpdatedAt time.Time  `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ISPDetails) GetID() int {
	return s.ID
}

// GetLatitude returns the value of Latitude.
func (s *ISPDetails) GetLatitude() float32 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *ISPDetails) GetLongitude() float32 {
	return s.Longitude
}

// GetName returns the value of Name.
func (s *ISPDetails) GetName() string {
	return s.Name
}

// GetBlocks returns the value of Blocks.
func (s *ISPDetails) GetBlocks() []ISPBlock {
	return s.Blocks
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ISPDetails) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ISPDetails) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ISPDetails) SetID(val int) {
	s.ID = val
}

// SetLatitude sets the value of Latitude.
func (s *ISPDetails) SetLatitude(val float32) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *ISPDetails) SetLongitude(val float32) {
	s.Longitude = val
}

// SetName sets the value of Name.
func (s *ISPDetails) SetName(val string) {
	s.Name = val
}

// SetBlocks sets the value of Blocks.
func (s *ISPDetails) SetBlocks(val []ISPBlock) {
	s.Blocks = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ISPDetails) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ISPDetails) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/ISPInput
type ISPInput struct {
	Latitude  float32 `json:"latitude"`
	Longitude float32 `json:"longitude"`
	Name      string  `json:"name"`
}

// GetLatitude returns the value of Latitude.
func (s *ISPInput) GetLatitude() float32 {
	return s.Latitude
}

// GetLongitude returns the value of Longitude.
func (s *ISPInput) GetLongitude() float32 {
	return s.Longitude
}

// GetName returns the value of Name.
func (s *ISPInput) GetName() string {
	return s.Name
}

// SetLatitude sets the value of Latitude.
func (s *ISPInput) SetLatitude(val float32) {
	s.Latitude = val
}

// SetLongitude sets the value of Longitude.
func (s *ISPInput) SetLongitude(val float32) {
	s.Longitude = val
}

// SetName sets the value of Name.
func (s *ISPInput) SetName(val string) {
	s.Name = val
}

type ListISPsOrder string

const (
	ListISPsOrderAsc  ListISPsOrder = "asc"
	ListISPsOrderDesc ListISPsOrder = "desc"
)

// AllValues returns all ListISPsOrder values.
func (ListISPsOrder) AllValues() []ListISPsOrder {
	return []ListISPsOrder{
		ListISPsOrderAsc,
		ListISPsOrderDesc,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ListISPsOrder) MarshalText() ([]byte, error) {
	switch s {
	case ListISPsOrderAsc:
		return []byte(s), nil
	case ListISPsOrderDesc:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ListISPsOrder) UnmarshalText(data []byte) error {
	switch ListISPsOrder(data) {
	case ListISPsOrderAsc:
		*s = ListISPsOrderAsc
		return nil
	case ListISPsOrderDesc:
		*s = ListISPsOrderDesc
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ListSitesOrder string

const (
	ListSitesOrderAsc  ListSitesOrder = "asc"
	ListSitesOrderDesc ListSitesOrder = "desc"
)

// AllValues returns all ListSitesOrder values.
func (ListSitesOrder) AllValues() []ListSitesOrder {
	return []ListSitesOrder{
		ListSitesOrderAsc,
		ListSitesOrderDesc,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ListSitesOrder) MarshalText() ([]byte, error) {
	switch s {
	case ListSitesOrderAsc:
		return []byte(s), nil
	case ListSitesOrderDesc:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ListSitesOrder) UnmarshalText(data []byte) error {
	switch ListSitesOrder(data) {
	case ListSitesOrderAsc:
		*s = ListSitesOrderAsc
		return nil
	case ListSitesOrderDesc:
		*s = ListSitesOrderDesc
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptAbuseReportStatus returns new OptAbuseReportStatus with value set to v.
func NewOptAbuseReportStatus(v AbuseReportStatus) OptAbuseReportStatus {
	return OptAbuseReportStatus{
		Value: v,
		Set:   true,
	}
}

// OptAbuseReportStatus is optional AbuseReportStatus.
type OptAbuseReportStatus struct {
	Value AbuseReportStatus
	Set   bool
}

// IsSet returns true if OptAbuseReportStatus was set.
func (o OptAbuseReportStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAbuseReportStatus) Reset() {
	var v AbuseReportStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAbuseReportStatus) SetTo(v AbuseReportStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAbuseReportStatus) Get() (v AbuseReportStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAbuseReportStatus) Or(d AbuseReportStatus) AbuseReportStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat32 returns new OptFloat32 with value set to v.
func NewOptFloat32(v float32) OptFloat32 {
	return OptFloat32{
		Value: v,
		Set:   true,
	}
}

// OptFloat32 is optional float32.
type OptFloat32 struct {
	Value float32
	Set   bool
}

// IsSet returns true if OptFloat32 was set.
func (o OptFloat32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat32) Reset() {
	var v float32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat32) SetTo(v float32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat32) Get() (v float32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat32) Or(d float32) float32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListISPsOrder returns new OptListISPsOrder with value set to v.
func NewOptListISPsOrder(v ListISPsOrder) OptListISPsOrder {
	return OptListISPsOrder{
		Value: v,
		Set:   true,
	}
}

// OptListISPsOrder is optional ListISPsOrder.
type OptListISPsOrder struct {
	Value ListISPsOrder
	Set   bool
}

// IsSet returns true if OptListISPsOrder was set.
func (o OptListISPsOrder) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListISPsOrder) Reset() {
	var v ListISPsOrder
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListISPsOrder) SetTo(v ListISPsOrder) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListISPsOrder) Get() (v ListISPsOrder, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListISPsOrder) Or(d ListISPsOrder) ListISPsOrder {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListSitesOrder returns new OptListSitesOrder with value set to v.
func NewOptListSitesOrder(v ListSitesOrder) OptListSitesOrder {
	return OptListSitesOrder{
		Value: v,
		Set:   true,
	}
}

// OptListSitesOrder is optional ListSitesOrder.
type OptListSitesOrder struct {
	Value ListSitesOrder
	Set   bool
}

// IsSet returns true if OptListSitesOrder was set.
func (o OptListSitesOrder) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListSitesOrder) Reset() {
	var v ListSitesOrder
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListSitesOrder) SetTo(v ListSitesOrder) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListSitesOrder) Get() (v ListSitesOrder, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListSitesOrder) Or(d ListSitesOrder) ListSitesOrder {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSiteSuggestionStatus returns new OptSiteSuggestionStatus with value set to v.
func NewOptSiteSuggestionStatus(v SiteSuggestionStatus) OptSiteSuggestionStatus {
	return OptSiteSuggestionStatus{
		Value: v,
		Set:   true,
	}
}

// OptSiteSuggestionStatus is optional SiteSuggestionStatus.
type OptSiteSuggestionStatus struct {
	Value SiteSuggestionStatus
	Set   bool
}

// IsSet returns true if OptSiteSuggestionStatus was set.
func (o OptSiteSuggestionStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSiteSuggestionStatus) Reset() {
	var v SiteSuggestionStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSiteSuggestionStatus) SetTo(v SiteSuggestionStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSiteSuggestionStatus) Get() (v SiteSuggestionStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSiteSuggestionStatus) Or(d SiteSuggestionStatus) SiteSuggestionStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Site
type Site struct {
	ID             int       `json:"id"`
	Domain         string    `json:"domain"`
	Categories     []string  `json:"categories"`
	BlockReports   int       `json:"block_reports"`
	UnblockReports int       `json:"unblock_reports"`
	LastReportedAt time.Time `json:"last_reported_at"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Site) GetID() int {
	return s.ID
}

// GetDomain returns the value of Domain.
func (s *Site) GetDomain() string {
	return s.Domain
}

// GetCategories returns the value of Categories.
func (s *Site) GetCategories() []string {
	return s.Categories
}

// GetBlockReports returns the value of BlockReports.
func (s *Site) GetBlockReports() int {
	return s.BlockReports
}

// GetUnblockReports returns the value of UnblockReports.
func (s *Site) GetUnblockReports() int {
	return s.UnblockReports
}

// GetLastReportedAt returns the value of LastReportedAt.
func (s *Site) GetLastReportedAt() time.Time {
	return s.LastReportedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Site) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Site) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Site) SetID(val int) {
	s.ID = val
}

// SetDomain sets the value of Domain.
func (s *Site) SetDomain(val string) {
	s.Domain = val
}

// SetCategories sets the value of Categories.
func (s *Site) SetCategories(val []string) {
	s.Categories = val
}

// SetBlockReports sets the value of BlockReports.
func (s *Site) SetBlockReports(val int) {
	s.BlockReports = val
}

// SetUnblockReports sets the value of UnblockReports.
func (s *Site) SetUnblockReports(val int) {
	s.UnblockReports = val
}

// SetLastReportedAt sets the value of LastReportedAt.
func (s *Site) SetLastReportedAt(val time.Time) {
	s.LastReportedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Site) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Site) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/SiteCreate
type SiteCreate struct {
	ID        int       `json:"id"`
	Domain    string    `json:"domain"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *SiteCreate) GetID() int {
	return s.ID
}

// GetDomain returns the value of Domain.
func (s *SiteCreate) GetDomain() string {
	return s.Domain
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SiteCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SiteCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *SiteCreate) SetID(val int) {
	s.ID = val
}

// SetDomain sets the value of Domain.
func (s *SiteCreate) SetDomain(val string) {
	s.Domain = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SiteCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SiteCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/SiteDetails
type SiteDetails struct {
	ID             int       `json:"id"`
	Domain         string    `json:"domain"`
	Categories     []string  `json:"categories"`
	BlockReports   int       `json:"block_reports"`
	UnblockReports int       `json:"unblock_reports"`
	LastReportedAt time.Time `json:"last_reported_at"`
	BlockedByIsps  []ISP     `json:"blocked_by_isps"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *SiteDetails) GetID() int {
	return s.ID
}

// GetDomain returns the value of Domain.
func (s *SiteDetails) GetDomain() string {
	return s.Domain
}

// GetCategories returns the value of Categories.
func (s *SiteDetails) GetCategories() []string {
	return s.Categories
}

// GetBlockReports returns the value of BlockReports.
func (s *SiteDetails) GetBlockReports() int {
	return s.BlockReports
}

// GetUnblockReports returns the value of UnblockReports.
func (s *SiteDetails) GetUnblockReports() int {
	return s.UnblockReports
}

// GetLastReportedAt returns the value of LastReportedAt.
func (s *SiteDetails) GetLastReportedAt() time.Time {
	return s.LastReportedAt
}

// GetBlockedByIsps returns the value of BlockedByIsps.
func (s *SiteDetails) GetBlockedByIsps() []ISP {
	return s.BlockedByIsps
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SiteDetails) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SiteDetails) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *SiteDetails) SetID(val int) {
	s.ID = val
}

// SetDomain sets the value of Domain.
func (s *SiteDetails) SetDomain(val string) {
	s.Domain = val
}

// SetCategories sets the value of Categories.
func (s *SiteDetails) SetCategories(val []string) {
	s.Categories = val
}

// SetBlockReports sets the value of BlockReports.
func (s *SiteDetails) SetBlockReports(val int) {
	s.BlockReports = val
}

// SetUnblockReports sets the value of UnblockReports.
func (s *SiteDetails) SetUnblockReports(val int) {
	s.UnblockReports = val
}

// SetLastReportedAt sets the value of LastReportedAt.
func (s *SiteDetails) SetLastReportedAt(val time.Time) {
	s.LastReportedAt = val
}

// SetBlockedByIsps sets the value of BlockedByIsps.
func (s *SiteDetails) SetBlockedByIsps(val []ISP) {
	s.BlockedByIsps = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SiteDetails) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SiteDetails) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/SiteInput
type SiteInput struct {
	Domain     string   `json:"domain"`
	Categories []string `json:"categories"`
}

// GetDomain returns the value of Domain.
func (s *SiteInput) GetDomain() string {
	return s.Domain
}

// GetCategories returns the value of Categories.
func (s *SiteInput) GetCategories() []string {
	return s.Categories
}

// SetDomain sets the value of Domain.
func (s *SiteInput) SetDomain(val string) {
	s.Domain = val
}

// SetCategories sets the value of Categories.
func (s *SiteInput) SetCategories(val []string) {
	s.Categories = val
}

// Ref: #/components/schemas/SiteSuggestion
type SiteSuggestion struct {
	ID         OptInt                  `json:"id"`
	SiteID     OptInt                  `json:"site_id"`
	Reason     OptString               `json:"reason"`
	Status     OptSiteSuggestionStatus `json:"status"`
	ResolvedAt OptDateTime             `json:"resolved_at"`
	CreatedAt  OptDateTime             `json:"created_at"`
	UpdatedAt  OptDateTime             `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *SiteSuggestion) GetID() OptInt {
	return s.ID
}

// GetSiteID returns the value of SiteID.
func (s *SiteSuggestion) GetSiteID() OptInt {
	return s.SiteID
}

// GetReason returns the value of Reason.
func (s *SiteSuggestion) GetReason() OptString {
	return s.Reason
}

// GetStatus returns the value of Status.
func (s *SiteSuggestion) GetStatus() OptSiteSuggestionStatus {
	return s.Status
}

// GetResolvedAt returns the value of ResolvedAt.
func (s *SiteSuggestion) GetResolvedAt() OptDateTime {
	return s.ResolvedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *SiteSuggestion) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *SiteSuggestion) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *SiteSuggestion) SetID(val OptInt) {
	s.ID = val
}

// SetSiteID sets the value of SiteID.
func (s *SiteSuggestion) SetSiteID(val OptInt) {
	s.SiteID = val
}

// SetReason sets the value of Reason.
func (s *SiteSuggestion) SetReason(val OptString) {
	s.Reason = val
}

// SetStatus sets the value of Status.
func (s *SiteSuggestion) SetStatus(val OptSiteSuggestionStatus) {
	s.Status = val
}

// SetResolvedAt sets the value of ResolvedAt.
func (s *SiteSuggestion) SetResolvedAt(val OptDateTime) {
	s.ResolvedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *SiteSuggestion) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *SiteSuggestion) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/SiteSuggestionInput
type SiteSuggestionInput struct {
	SiteID int    `json:"site_id"`
	Reason string `json:"reason"`
}

// GetSiteID returns the value of SiteID.
func (s *SiteSuggestionInput) GetSiteID() int {
	return s.SiteID
}

// GetReason returns the value of Reason.
func (s *SiteSuggestionInput) GetReason() string {
	return s.Reason
}

// SetSiteID sets the value of SiteID.
func (s *SiteSuggestionInput) SetSiteID(val int) {
	s.SiteID = val
}

// SetReason sets the value of Reason.
func (s *SiteSuggestionInput) SetReason(val string) {
	s.Reason = val
}

type SiteSuggestionStatus string

const (
	SiteSuggestionStatusPending  SiteSuggestionStatus = "pending"
	SiteSuggestionStatusResolved SiteSuggestionStatus = "resolved"
)

// AllValues returns all SiteSuggestionStatus values.
func (SiteSuggestionStatus) AllValues() []SiteSuggestionStatus {
	return []SiteSuggestionStatus{
		SiteSuggestionStatusPending,
		SiteSuggestionStatusResolved,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SiteSuggestionStatus) MarshalText() ([]byte, error) {
	switch s {
	case SiteSuggestionStatusPending:
		return []byte(s), nil
	case SiteSuggestionStatusResolved:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SiteSuggestionStatus) UnmarshalText(data []byte) error {
	switch SiteSuggestionStatus(data) {
	case SiteSuggestionStatusPending:
		*s = SiteSuggestionStatusPending
		return nil
	case SiteSuggestionStatusResolved:
		*s = SiteSuggestionStatusResolved
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
